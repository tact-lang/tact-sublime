<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>name</key>
    <string>Tact</string>
    <key>displayName</key>
    <string>Tact</string>
    <key>scopeName</key>
    <string>source.tact</string>
    <key>fileTypes</key>
    <array>
      <string>tact</string>
    </array>
    <key>foldingStartMarker</key>
    <string>\{\s*$</string>
    <key>foldingStopMarker</key>
    <string>^\s*\}</string>
    <key>patterns</key>
    <array>
      <dict>
        <key>include</key>
        <string>#comment</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#annotation</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#literal</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#invalid</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#constant</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#type</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#expression</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#punctuation</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#keyword</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#function</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#variable</string>
      </dict>
    </array>
    <key>repository</key>
    <dict>
      <key>comment</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>comment.line.double-slash.tact</string>
            <key>begin</key>
            <string>//</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.line.double-slash.tact</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#todo</string>
              </dict>
            </array>
            <key>end</key>
            <string>$</string>
          </dict>
          <dict>
            <key>name</key>
            <string>comment.block.tact</string>
            <key>begin</key>
            <string>\s*/\*</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>comment.block.begin.tact punctuation.definition.comment.begin.tact</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#todo</string>
              </dict>
            </array>
            <key>end</key>
            <string>\*/</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>comment.block.end.tact punctuation.definition.comment.end.tact</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>todo</key>
      <dict>
        <key>match</key>
        <string>(?i)\b(FIXME|TODO|CHANGED|XXX|IDEA|HACK|NOTE|REVIEW|NB|BUG)\b(?-i)</string>
        <key>name</key>
        <string>keyword.comment.todo.tact</string>
      </dict>
      <key>annotation</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>comment</key>
            <string>@name() in native functions</string>
            <key>begin</key>
            <string>^\s*(@name)\s*(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>entity.other.attribute-name.tact</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.brackets.round.tact</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>comment</key>
                <string>FunC identifier</string>
                <key>match</key>
                <string>(.*?)</string>
                <key>name</key>
                <string>entity.name.function.func.tact</string>
              </dict>
            </array>
            <key>end</key>
            <string>\)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.brackets.round.tact</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>comment</key>
            <string>One or more @inteface() before traits and contracts</string>
            <key>begin</key>
            <string>(?&lt;!\.)(@interface)\s*(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>entity.other.attribute-name.tact</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.brackets.round.tact</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#string</string>
              </dict>
            </array>
            <key>end</key>
            <string>\)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.brackets.round.tact</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>comment</key>
            <string>Fallback match</string>
            <key>match</key>
            <string>(?&lt;!\.)\b(@name|@interface)\b</string>
            <key>name</key>
            <string>entity.other.attribute-name.tact</string>
          </dict>
        </array>
      </dict>
      <key>literal</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>comment</key>
            <string>Hexadecimal integer</string>
            <key>match</key>
            <string>\b(0[xX][a-fA-F0-9](?:_?[a-fA-F0-9])*)\b</string>
            <key>name</key>
            <string>constant.numeric.hex.tact</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Octal integer</string>
            <key>match</key>
            <string>\b(0[oO][0-7](?:_?[0-7])*)\b</string>
            <key>name</key>
            <string>constant.numeric.oct.tact</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Binary integer</string>
            <key>match</key>
            <string>\b(0[bB][01](?:_?[01])*)\b</string>
            <key>name</key>
            <string>constant.numeric.bin.tact</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Decimal integer WITH leading zero</string>
            <key>match</key>
            <string>\b(0[0-9]*)\b</string>
            <key>name</key>
            <string>constant.numeric.decimal.tact</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Decimal integer WITHOUT leading zero</string>
            <key>match</key>
            <string>\b([1-9](?:_?[0-9])*)\b</string>
            <key>name</key>
            <string>constant.numeric.decimal.tact</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Boolean literal</string>
            <key>match</key>
            <string>(?&lt;!\.)\b(true|false)\b</string>
            <key>name</key>
            <string>constant.language.bool.tact</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>self</string>
            <key>match</key>
            <string>(?&lt;!\.)\b(self)\b</string>
            <key>name</key>
            <string>variable.language.this.tact</string>
          </dict>
        </array>
      </dict>
      <key>string</key>
      <dict>
        <key>comment</key>
        <string>String literal</string>
        <key>begin</key>
        <string>"</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.begin.tact</string>
          </dict>
        </dict>
        <key>name</key>
        <string>string.quoted.double.tact</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#escape-sequence</string>
          </dict>
        </array>
        <key>end</key>
        <string>"</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.end.tact</string>
          </dict>
        </dict>
      </dict>
      <key>escape-sequence</key>
      <dict>
        <key>comment</key>
        <string>Allowed escape sequences in strings</string>
        <key>match</key>
        <string>(?:\\)(?:(\\)|(")|([nrtvbf])|(x[a-fA-F0-9]{2})|(u[a-fA-F0-9]{4})|(u\{[a-fA-F0-9]{1,6}\}))</string>
        <key>name</key>
        <string>constant.character.escape.tact</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>constant.character.escape.backslash.tact</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>constant.character.escape.double-quote.tact</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>constant.character.escape.special.tact</string>
          </dict>
          <key>4</key>
          <dict>
            <key>name</key>
            <string>constant.character.escape.hex.tact</string>
          </dict>
          <key>5</key>
          <dict>
            <key>name</key>
            <string>constant.character.escape.unicode.tact</string>
          </dict>
          <key>6</key>
          <dict>
            <key>name</key>
            <string>constant.character.escape.unicodepoint.tact</string>
          </dict>
        </dict>
      </dict>
      <key>invalid</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>comment</key>
            <string>Anything starting with __gen or __tact</string>
            <key>match</key>
            <string>\b__(?:gen|tact)[a-zA-Z0-9_]*\b</string>
            <key>name</key>
            <string>invalid.illegal.identifier.tact</string>
          </dict>
        </array>
      </dict>
      <key>constant</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>comment</key>
            <string>self.storageReserve</string>
            <key>match</key>
            <string>(?&lt;=self\.)(storageReserve)\b</string>
            <key>name</key>
            <string>constant.other.builtin.tact</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Other constants from the core library</string>
            <key>match</key>
            <string>(?&lt;!\.)\b(SendRemainingValue|SendRemainingBalance|SendPayGasSeparately|SendIgnoreErrors|SendBounceIfActionFail|SendDestroyIfZero|ReserveExact|ReserveAllExcept|ReserveAtMost|ReserveAddOriginalBalance|ReserveInvertSign|ReserveBounceIfActionFail)\b</string>
            <key>name</key>
            <string>constant.other.builtin.tact</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>ALL CAPS constants</string>
            <key>match</key>
            <string>\b([A-Z]{2}[A-Z0-9_]*)\b</string>
            <key>name</key>
            <string>constant.other.caps.tact</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Constant declaration or definition</string>
            <key>match</key>
            <string>(?&lt;!\.)\b(const)\s+([a-zA-Z_][A-Za-z0-9_]*)\b</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.other.tact</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>constant.other.declaration.tact</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>comment</key>
            <string>null</string>
            <key>match</key>
            <string>(?&lt;!\.)\b(null)\b</string>
            <key>name</key>
            <string>constant.language.null.tact</string>
          </dict>
        </array>
      </dict>
      <key>type</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#simple-type</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>bounced&lt;T&gt;</string>
            <key>begin</key>
            <string>(?&lt;!\.)\b(bounced)\s*(&lt;)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>entity.name.type.tact</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.brackets.angle.tact</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#simple-type</string>
              </dict>
            </array>
            <key>end</key>
            <string>&gt;</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.brackets.angle.tact</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>comment</key>
            <string>map&lt;K, V&gt;</string>
            <key>begin</key>
            <string>(?&lt;!\.)\b(map)\s*(&lt;)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>entity.name.type.tact</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.brackets.angle.tact</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#simple-type</string>
              </dict>
              <dict>
                <key>match</key>
                <string>,</string>
                <key>name</key>
                <string>punctuation.comma.tact</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#as-tlb</string>
              </dict>
            </array>
            <key>end</key>
            <string>&gt;</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.brackets.angle.tact</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>include</key>
            <string>#as-tlb</string>
          </dict>
        </array>
      </dict>
      <key>simple-type</key>
      <dict>
        <key>comment</key>
        <string>Simple types</string>
        <key>match</key>
        <string>(?&lt;!\.)\b([A-Z][a-zA-Z0-9_]*)(\??)</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.tact</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.optional.tact</string>
          </dict>
        </dict>
      </dict>
      <key>as-tlb</key>
      <dict>
        <key>comment</key>
        <string>Serialization</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(?&lt;!\.)\b(as)\s+([a-zA-Z_][a-zA-Z0-9_]*)\b</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.other.as.tact storage.modifier.tact</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>entity.name.type.tact</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>expression</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>comment</key>
            <string>Logical operators</string>
            <key>match</key>
            <string>(\|\||&amp;&amp;|!!?)(?!=)</string>
            <key>name</key>
            <string>keyword.operator.logical.tact</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Bitwise operators</string>
            <key>match</key>
            <string>(\^|&amp;|\||~|&lt;&lt;|&gt;&gt;)(?!=)</string>
            <key>name</key>
            <string>keyword.operator.bitwise.tact</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Augmented assignment operators</string>
            <key>match</key>
            <string>(\+=|-=|\*=|/=|%=|\^=|&amp;=|\|=|&lt;&lt;=|&gt;&gt;=)</string>
            <key>name</key>
            <string>keyword.operator.assignment.tact</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Assignment operator</string>
            <key>match</key>
            <string>(?&lt;![&lt;&gt;])=(?!=)</string>
            <key>name</key>
            <string>keyword.operator.assignment.equal.tact</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Comparison operators</string>
            <key>match</key>
            <string>([!=]=|&lt;=?|&gt;=?)</string>
            <key>name</key>
            <string>keyword.operator.comparison.tact</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Arithmetic operators</string>
            <key>match</key>
            <string>([+%*\-])|(/(?!/))</string>
            <key>name</key>
            <string>keyword.operator.arithmetic.tact</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>initOf expression</string>
            <key>match</key>
            <string>\b(initOf)\b</string>
            <key>name</key>
            <string>keyword.operator.new.tact</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Ternary expression</string>
            <key>begin</key>
            <string>(?!\?\.\s*[^[:digit:]])(\?)(?!\?)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.ternary.tact</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>$self</string>
              </dict>
            </array>
            <key>end</key>
            <string>\s*(:)</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.ternary.tact</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>punctuation</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>,</string>
            <key>name</key>
            <string>punctuation.comma.tact</string>
          </dict>
          <dict>
            <key>match</key>
            <string>[{}]</string>
            <key>name</key>
            <string>punctuation.brackets.curly.tact</string>
          </dict>
          <dict>
            <key>match</key>
            <string>[()]</string>
            <key>name</key>
            <string>punctuation.brackets.round.tact</string>
          </dict>
          <dict>
            <key>match</key>
            <string>;</string>
            <key>name</key>
            <string>punctuation.semi.tact</string>
          </dict>
          <dict>
            <key>match</key>
            <string>:</string>
            <key>name</key>
            <string>punctuation.colon.tact</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\.</string>
            <key>name</key>
            <string>punctuation.dot.tact</string>
          </dict>
        </array>
      </dict>
      <key>keyword</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(?&lt;!\.)\b(import)\b</string>
            <key>name</key>
            <string>keyword.control.import.tact</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Control flow keywords, prefixed by more than one dot</string>
            <key>match</key>
            <string>(?&lt;=\.\.)\b(else|catch|until|in(?!\s*\())\b</string>
            <key>name</key>
            <string>keyword.control.tact</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Control flow keywords</string>
            <key>match</key>
            <string>(?&lt;!\.)\b(if|else|try|catch|repeat|do|until|while|foreach|in(?!\s*\()|return)\b</string>
            <key>name</key>
            <string>keyword.control.tact</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>let and const</string>
            <key>match</key>
            <string>(?&lt;!\.)\b(let|const)\b</string>
            <key>name</key>
            <string>keyword.other.tact</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Serialization</string>
            <key>match</key>
            <string>(?&lt;!\.)\b(as)\b</string>
            <key>name</key>
            <string>keyword.other.as.tact storage.modifier.tact</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?&lt;!\.)\b(struct)\b</string>
            <key>name</key>
            <string>keyword.other.struct.tact</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?&lt;!\.)\b(message)\b</string>
            <key>name</key>
            <string>keyword.other.message.tact</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?&lt;!\.)\b(trait)\b</string>
            <key>name</key>
            <string>keyword.other.trait.tact</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?&lt;!\.)\b(contract)\b</string>
            <key>name</key>
            <string>keyword.other.contract.tact</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Constant and function attributes</string>
            <key>match</key>
            <string>(?&lt;!\.)\b(abstract|virtual|override)\b</string>
            <key>name</key>
            <string>keyword.other.attribute.tact storage.modifier.tact</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Function attributes</string>
            <key>match</key>
            <string>(?&lt;!\.)\b(extends|get|inline|mutates)\b</string>
            <key>name</key>
            <string>keyword.other.attribute.tact</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Function declaration/definition keywords</string>
            <key>match</key>
            <string>(?&lt;!\.)\b(fun|native)\b</string>
            <key>name</key>
            <string>keyword.other.function.tact</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Special functions</string>
            <key>match</key>
            <string>(?&lt;!\.)\b(init|receive|bounced|external)(?=\s*\()</string>
            <key>name</key>
            <string>keyword.other.function.tact</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Reserved keywords</string>
            <key>match</key>
            <string>(?&lt;!\.)\b(extend|public)\b</string>
            <key>name</key>
            <string>keyword.other.reserved.tact</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Other keywords</string>
            <key>match</key>
            <string>(?&lt;!\.)\b(primitive|with)\b</string>
            <key>name</key>
            <string>keyword.other.tact</string>
          </dict>
        </array>
      </dict>
      <key>function</key>
      <dict>
        <key>comment</key>
        <string>Function declaration, definition or call</string>
        <key>match</key>
        <string>\b((?:[a-zA-Z_][a-zA-Z0-9_]*))\s*(\()</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.tact</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.brackets.round.tact</string>
          </dict>
        </dict>
      </dict>
      <key>variable</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>comment</key>
            <string>Any valid Tact identifier</string>
            <key>match</key>
            <string>(?&lt;!\.)\b(_)\b</string>
            <key>name</key>
            <string>comment.unused-identifier.tact</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Any valid Tact identifier</string>
            <key>match</key>
            <string>\b([a-zA-Z_][a-zA-Z0-9_]*)\b</string>
            <key>name</key>
            <string>variable.other.tact</string>
          </dict>
        </array>
      </dict>
    </dict>
  </dict>
</plist>
